"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _DocumentWithoutSegments = _interopRequireDefault(require("./DocumentWithoutSegments"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The Project model module.
 * @module model/Project
 * @version 0.5.0
 */
var Project = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Project</code>.
   * A Project is a collection of zero or more Documents. It is specific to a language pair, and is associated with exactly one Memory for that language pair. The Memory association cannot be changed after the Project is created. 
   * @alias module:model/Project
   */
  function Project() {
    _classCallCheck(this, Project);

    Project.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(Project, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>Project</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Project} obj Optional instance to populate.
     * @return {module:model/Project} The populated <code>Project</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Project();

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
        }

        if (data.hasOwnProperty('memory_id')) {
          obj['memory_id'] = _ApiClient["default"].convertToType(data['memory_id'], 'Number');
        }

        if (data.hasOwnProperty('srclang')) {
          obj['srclang'] = _ApiClient["default"].convertToType(data['srclang'], 'String');
        }

        if (data.hasOwnProperty('trglang')) {
          obj['trglang'] = _ApiClient["default"].convertToType(data['trglang'], 'String');
        }

        if (data.hasOwnProperty('srclocale')) {
          obj['srclocale'] = _ApiClient["default"].convertToType(data['srclocale'], 'String');
        }

        if (data.hasOwnProperty('trglocale')) {
          obj['trglocale'] = _ApiClient["default"].convertToType(data['trglocale'], 'String');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('state')) {
          obj['state'] = _ApiClient["default"].convertToType(data['state'], 'String');
        }

        if (data.hasOwnProperty('due_date')) {
          obj['due_date'] = _ApiClient["default"].convertToType(data['due_date'], 'Number');
        }

        if (data.hasOwnProperty('archived')) {
          obj['archived'] = _ApiClient["default"].convertToType(data['archived'], 'Boolean');
        }

        if (data.hasOwnProperty('metadata')) {
          obj['metadata'] = _ApiClient["default"].convertToType(data['metadata'], Object);
        }

        if (data.hasOwnProperty('sample_review_percentage')) {
          obj['sample_review_percentage'] = _ApiClient["default"].convertToType(data['sample_review_percentage'], 'Number');
        }

        if (data.hasOwnProperty('created_at')) {
          obj['created_at'] = _ApiClient["default"].convertToType(data['created_at'], 'Number');
        }

        if (data.hasOwnProperty('updated_at')) {
          obj['updated_at'] = _ApiClient["default"].convertToType(data['updated_at'], 'Number');
        }

        if (data.hasOwnProperty('document')) {
          obj['document'] = _ApiClient["default"].convertToType(data['document'], [_DocumentWithoutSegments["default"]]);
        }
      }

      return obj;
    }
  }]);

  return Project;
}();
/**
 * A unique number identifying the Project.
 * @member {Number} id
 */


Project.prototype['id'] = undefined;
/**
 * A unique number identifying the associated Memory.
 * @member {Number} memory_id
 */

Project.prototype['memory_id'] = undefined;
/**
 * An ISO 639-1 language identifier.
 * @member {String} srclang
 */

Project.prototype['srclang'] = undefined;
/**
 * An ISO 639-1 language identifier.
 * @member {String} trglang
 */

Project.prototype['trglang'] = undefined;
/**
 * A locale identifier, supported for srclang.
 * @member {String} srclocale
 */

Project.prototype['srclocale'] = undefined;
/**
 * A locale identifier, supported for trglang.
 * @member {String} trglocale
 */

Project.prototype['trglocale'] = undefined;
/**
 * A name for the project.
 * @member {String} name
 */

Project.prototype['name'] = undefined;
/**
 * The project's state. The possible states are 'backlog', 'inProgress', 'inReview', 'inQA', and 'done'
 * @member {String} state
 */

Project.prototype['state'] = undefined;
/**
 * The due date. Measured in seconds since the Unix epoch.
 * @member {Number} due_date
 */

Project.prototype['due_date'] = undefined;
/**
 * The archived state of the Project.
 * @member {Boolean} archived
 */

Project.prototype['archived'] = undefined;
/**
 * A JSON object for storing various project metadata.
 * @member {Object} metadata
 */

Project.prototype['metadata'] = undefined;
/**
 * The project's sample review percentage.
 * @member {Number} sample_review_percentage
 */

Project.prototype['sample_review_percentage'] = undefined;
/**
 * Time at which the object was created. Measured in seconds since the Unix epoch.
 * @member {Number} created_at
 */

Project.prototype['created_at'] = undefined;
/**
 * Time at which the object was created. Measured in seconds since the Unix epoch.
 * @member {Number} updated_at
 */

Project.prototype['updated_at'] = undefined;
/**
 * A list of Documents.
 * @member {Array.<module:model/DocumentWithoutSegments>} document
 */

Project.prototype['document'] = undefined;
var _default = Project;
exports["default"] = _default;