"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The DocumentAssignmentParameters model module.
 * @module model/DocumentAssignmentParameters
 * @version 0.5.0
 */
var DocumentAssignmentParameters = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>DocumentAssignmentParameters</code>.
   * @alias module:model/DocumentAssignmentParameters
   * @param id {Number} A unique Document identifier.
   * @param email {String} An email address.
   */
  function DocumentAssignmentParameters(id, email) {
    _classCallCheck(this, DocumentAssignmentParameters);

    DocumentAssignmentParameters.initialize(this, id, email);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(DocumentAssignmentParameters, null, [{
    key: "initialize",
    value: function initialize(obj, id, email) {
      obj['id'] = id;
      obj['email'] = email;
    }
    /**
     * Constructs a <code>DocumentAssignmentParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocumentAssignmentParameters} obj Optional instance to populate.
     * @return {module:model/DocumentAssignmentParameters} The populated <code>DocumentAssignmentParameters</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new DocumentAssignmentParameters();

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
        }

        if (data.hasOwnProperty('email')) {
          obj['email'] = _ApiClient["default"].convertToType(data['email'], 'String');
        }

        if (data.hasOwnProperty('is_translator')) {
          obj['is_translator'] = _ApiClient["default"].convertToType(data['is_translator'], 'Boolean');
        }

        if (data.hasOwnProperty('is_reviewer')) {
          obj['is_reviewer'] = _ApiClient["default"].convertToType(data['is_reviewer'], 'Boolean');
        }

        if (data.hasOwnProperty('due_date')) {
          obj['due_date'] = _ApiClient["default"].convertToType(data['due_date'], 'Date');
        }
      }

      return obj;
    }
  }]);

  return DocumentAssignmentParameters;
}();
/**
 * A unique Document identifier.
 * @member {Number} id
 */


DocumentAssignmentParameters.prototype['id'] = undefined;
/**
 * An email address.
 * @member {String} email
 */

DocumentAssignmentParameters.prototype['email'] = undefined;
/**
 * If true, assign for translating. If false, then unassign.
 * @member {Boolean} is_translator
 */

DocumentAssignmentParameters.prototype['is_translator'] = undefined;
/**
 * If true, assign for reviewing. If false, then unassign.
 * @member {Boolean} is_reviewer
 */

DocumentAssignmentParameters.prototype['is_reviewer'] = undefined;
/**
 * Due date for translation or review (set based on `is_translator` and `is_reviewer` flags).
 * @member {Date} due_date
 */

DocumentAssignmentParameters.prototype['due_date'] = undefined;
var _default = DocumentAssignmentParameters;
exports["default"] = _default;