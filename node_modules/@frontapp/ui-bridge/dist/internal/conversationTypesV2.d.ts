import { ApplicationConversationId, ApplicationDraftId } from './idTypesV2';
import { ApplicationInbox } from './inboxTypesV2';
import { ApplicationRecipient } from './recipientTypesV2';
import { ApplicationTag } from './tagTypesV2';
import { ApplicationTeammate } from './teammateTypesV2';
import { ApplicationTopic } from './topicTypesV2';
export declare type ApplicationConversationType = 'email' | 'whatsapp' | 'frontChat' | 'internal' | 'phoneCall' | 'tweet' | 'twitterDm' | 'sms' | 'googlePlay' | 'intercom' | 'smooch' | 'facebook' | 'custom';
export declare type ApplicationConversationStatus = 'open' | 'archived' | 'trashed' | 'spam';
export interface ApplicationConversation {
    /** Unique ID of the conversation. */
    id: ApplicationConversationId;
    /** Type of messages in the conversation. */
    type: ApplicationConversationType;
    /** Status of the conversation for the current user. */
    status: ApplicationConversationStatus;
    /** Subject. */
    subject: string | undefined;
    /** Blurb of the latest message in the conversation. */
    blurb: string | undefined;
    /** Teammate assigned to the conversation, if any. */
    assignee: ApplicationTeammate | undefined;
    /** Main recipient of the conversation. */
    recipient: ApplicationRecipient | undefined;
    /** Inboxes the conversation is in. */
    inboxes: ReadonlyArray<ApplicationInbox>;
    /** Tags attached to the conversation. */
    tags: ReadonlyArray<ApplicationTag>;
    /** Topics attached to the conversation. */
    topics: ReadonlyArray<ApplicationTopic>;
}
export interface ApplicationSingleConversation extends ApplicationConversation {
    /** ID of the draft message on this conversation, if any. */
    draftId: ApplicationDraftId | undefined;
}
