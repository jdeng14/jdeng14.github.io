import { ApplicationAttachmentId, ApplicationMessageId } from './idTypesV2';
import { ApplicationPaginatedResults } from './paginationTypesV2';
import { ApplicationRecipient } from './recipientTypesV2';
export declare type ApplicationMessageStatus = 'inbound' | 'outbound';
export interface ApplicationMessage extends ApplicationMessageRecipients {
    /** Unique ID of the message. */
    id: ApplicationMessageId;
    /** Subject of the message. */
    subject: string | undefined;
    /** Date at which the message has been sent or received. Can be undefined if the message is a draft. */
    date: Date;
    /** Status of the message. */
    status: ApplicationMessageStatus;
    /** Content properties of the message. Will be undefined if the content is not available. */
    content: ApplicationMessageContent | undefined;
}
export interface ApplicationMessageRecipients {
    /** Recipient the message is coming from. */
    from: ApplicationRecipient;
    /** Recipient to use to reply to this message.  */
    replyTo: ApplicationRecipient | undefined;
    /** List of recipients the message is addressed to. */
    to: ReadonlyArray<ApplicationRecipient>;
    /** List of recipients in copy of the emssage. */
    cc: ReadonlyArray<ApplicationRecipient> | undefined;
    /** List of recipients in blind copy of the message. */
    bcc: ReadonlyArray<ApplicationRecipient> | undefined;
}
export interface ApplicationMessageContent {
    /** Content of the message. */
    body: string;
    /** Content type of the body. */
    type: 'html' | 'text';
    /** List of files attached to the message. */
    attachments: ReadonlyArray<ApplicationAttachment>;
}
export declare type ApplicationMessageList = ApplicationPaginatedResults<ApplicationMessage>;
export interface ApplicationAttachment {
    /** Unique ID of the attachment. */
    id: ApplicationAttachmentId;
    /** Name of the file. */
    name: string;
    /** MIME type of the file. */
    contentType: string;
    /** Size of the file (in bytes). */
    size: number;
    /** Identifier of the file in the body, if inline. */
    inlineCid: string | undefined;
}
