import { ApplicationContactGroupId, ApplicationContactId, ApplicationCustomFieldId, ApplicationTeammateId } from './idTypesV2';
export interface ApplicationContact {
    /** Unique ID of the Contact. */
    id: ApplicationContactId;
    /** Name of the contact. */
    name: string | undefined;
    /** Description of the contact. */
    description: string | undefined;
    /** List of the contact's handles. */
    handles: ReadonlyArray<ApplicationContactHandle>;
    /** List of groups the contact belongs to. */
    groupIds: ReadonlyArray<ApplicationContactGroupId>;
    /** List of the contact's custom attributes. */
    customAttributes: ReadonlyArray<ApplicationCustomAttribute>;
}
export declare type ApplicationContactHandleType = 'email' | 'phone' | 'twitter' | 'custom' | 'facebook' | 'intercom' | 'smooch' | 'frontChat' | 'whatsapp' | 'googlePlay';
interface ApplicationContactHandle {
    /** Type of the handle. */
    type: ApplicationContactHandleType;
    /** Handle used to exchange messages with the contact. */
    handle: string;
}
interface ApplicationCustomFieldTypeMap {
    string: string;
    datetime: Date;
    boolean: boolean;
    number: number;
    teammateId: ApplicationTeammateId;
    unknown: string;
}
interface ApplicationCustomAttributeBase<T extends keyof ApplicationCustomFieldTypeMap> {
    id: ApplicationCustomFieldId;
    name: string;
    type: T;
    value: ApplicationCustomFieldTypeMap[T];
}
export declare type ApplicationCustomAttribute = ApplicationCustomAttributeBase<'string'> | ApplicationCustomAttributeBase<'datetime'> | ApplicationCustomAttributeBase<'boolean'> | ApplicationCustomAttributeBase<'number'> | ApplicationCustomAttributeBase<'teammateId'> | ApplicationCustomAttributeBase<'unknown'>;
export {};
